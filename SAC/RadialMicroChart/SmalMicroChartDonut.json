{
	"id": "com.voith.sac.smartmicrochart",
	"version": "0.0.2",
	"name": "Smart MicroChart",
	"description": "Smart MicroChart",
	"newInstancePrefix": "smc",
	"icon":"https://fhasba1204.github.io/SAC/RadialMicroChart/icon.png",
	"vendor": "Voith",
	"eula": "",
	"license": "",
	"imports": [ "input-controls" ],
	"webcomponents": [
	  {
		"kind": "main",
		"tag": "com-voith-sac-smartmicrochart",
		"url": "https://fhasba1204.github.io/SAC/RadialMicroChart/SmartMicroChartDonut.js",
		"integrity": "",
		"ignoreIntegrity": true
	  }	
	],
	"properties": {
	  "metadata": {
		"type": "string",
		"description": "For internal use",
		"default": ""
	  },
	  "valuecolor": {
		"type": "string",
		"description": "Value Color",
		"default": "None"
	},
	"percentage": {
		"type": "number",
		"description": "Percentage",
		"default": 0.0
	},
	"width": {
		"type": "integer",
		"description": "Width",
		"default": 90
	},
	"height": {
		"type": "integer",
		"description": "Height",
		"default": 90
	}
},
"methods": {
	"setPercentage": {
		"description": "Sets the Percentage.",
		"parameters": [
			{
				"name": "fPercentage",
				"type": "number",
				"description": "The new percentage"
			}
		],
		"body": "this.percentage = fPercentage;"
	},
	"getPercentage": {
		"returnType": "number",
		"description": "Returns the percentage.",
		"body": "return this.percentage;"
	},
	"setHeight": {
		"description": "Sets the Height.",
		"parameters": [
			{
				"name": "fHeight",
				"type": "integer",
				"description": "The new Height"
			}
		],
		"body": "this.height = fHeight;"
	},
	
	"getHeight": {
		"returnType": "integer",
		"description": "Returns the Height.",
		"body": "return this.height;"
	},

	"setWidth": {
		"description": "Sets the Width.",
		"parameters": [
			{
				"name": "fWidth",
				"type": "integer",
				"description": "The new Width"
			}
		],
		"body": "this.width = fWidth;"
	},

	"getWidth": {
		"returnType": "integer",
		"description": "Returns the Width.",
		"body": "return this.width;"
	},


	"getValueColor": {
		"returnType": "string",
		"description": "Returns the Value Color.",
		"body": "return this.valuecolor;"
	},

	"setValueColor": {
		"description": "Sets the Value Color (Neutral, Good, Critical, Error, None.",
		"parameters": [
			{
				"name": "fColor",
				"type": "string",
				"description": "The new Value Color"
			}
		],
		"body": "this.valuecolor = fColor;"
	}
},
"events": {
	"onPress": {
		"description": "Called when the chart is pressed."
	}
}
  }